---
# tasks file for Cluster

- name: bypass ** MariaDB - zabbix - galera ** from firewalld
  shell: |
   firewall-cmd --zone=public --add-port=3306/tcp  --permanent
   firewall-cmd --zone=public --add-port=10050/tcp --permanent
   firewall-cmd --zone=public --add-port=3306/tcp --permanent
   firewall-cmd --zone=public --add-port=4567/tcp --permanent
   firewall-cmd --zone=public --add-port=4567/udp --permanent
   firewall-cmd --zone=public --add-port=4568/tcp --permanent
   firewall-cmd --zone=public --add-port=4568/udp --permanent
   firewall-cmd --zone=public --add-port=4444/tcp --permanent
   firewall-cmd --zone=public --add-port=4444/udp --permanent
   firewall-cmd --reload

- name: ------ Disabled selinux ------
  selinux: 
    state: disabled  
#- name: deploy MariaDB.repo
 # copy: src=MariaDB.repo dest=/etc/yum.repos.d/MariaDB.repo owner=root group=root mode=0644
#- name: import RPR-GPG-KEY-MariaDB
#  rpm_key: key=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB state=present

- include: mysql.yml

- name: ----- install Tools Cluster ** rsysc,galera,socat,jemalloc **  -----
  yum: name={{ item }} state=present
  with_items:
    - rsync
    - galera
    - socat
    - jemalloc

- name: ----- Stop MariaDB All server -----
  service: name=mariadb state=stopped  

- name: ----- deploy server.conf to the servers -----
  template: src=primary-server.j2 dest=/etc/my.cnf.d/server.cnf
  
- name: ----- run galera_new_cluster on the primary node -----
  shell: galera_new_cluster
  when: "{{ item }}" 
    with_items:
<<<<<<< HEAD
      - "{% for host in nodes %}{% if nodes[host].master == True %} true {% endif %}{% endfor %}"
=======
     - "{% for host in nodes %}{{nodes[host].master}}{% if nodes[host].master == True %} \n {% endif %}{% endfor %}"
>>>>>>> fa89a1586913b5bf584bce0157ec7e70f4e75937
  #when: ansible_env.SSH_CONNECTION.split(' ')[2] == nodes.node1.ssh

- name: ----- start and enable mysqld (Nonprimary) -----
  service: name=mariadb state=started enabled=yes
  when: "{% for host in nodes %} not nodes[host].master {% endfor %}"
  #when: ansible_env.SSH_CONNECTION.split(' ')[2] != nodes.node1.ssh

# if you want use prompt for install zabbix-agent and 800-item template
#- name: confirm
#  pause:
#    prompt: "Do you want to install zabbix-agent and 800-item Template for monitoring MariaDB (yes/no)?"
#  register: install_zabbix-agent

- include_tasks: zabbix-agent.yml
  when: zabbix_config.zabbix-install
  # if you want use prompt for install zabbix-agent and 800-item template  
  #when: hostvars[groups['dbs'][0]]['install_zabbix-agent']['user_input'] == "yes"  

  
